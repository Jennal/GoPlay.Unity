// Code generated by Excel2ScriptableObject. DO NOT EDIT.
// source file: Assets/./Excels/全局设置表.xlsx
// source sheet: Quality@ZH_CN

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using UnityEngine;
using GoPlay.Data.Config;
using GoPlay;

namespace GoPlay.Data.Config
{
    /// <summary>
	/// QualityConf表单行结构
    ///
	/// 品质背景表
	/// </summary>
	[Serializable]
	public partial struct QualityConf
	{
		
		/// <summary>
		/// 道具品质
		/// </summary>
		public int Id;

		/// <summary>
		/// 卡牌品质
		/// </summary>
		public CardQuality CardQuality;

		/// <summary>
		/// 道具图标
		/// </summary>
		public SpriteRefer CardIcon;

		
		public override string ToString()
		{
			var sb = new StringBuilder();
			sb.Append("QualityConf : { ");
			
			sb.AppendFormat("Id: {0}, ", Id);
			sb.AppendFormat("CardQuality: {0}, ", CardQuality);
			sb.AppendFormat("CardIcon: {0}, ", CardIcon);
			sb.Append(" }");
			return sb.ToString();
		}
		
		public override bool Equals(object obj)
		{
			if (obj is QualityConf == false) return false;
			
			var o = (QualityConf)obj;
			
			if (Id != o.Id) return false;
			if (CardQuality != o.CardQuality) return false;
			if (CardIcon != o.CardIcon) return false;
			
			return true;
		}

        public override int GetHashCode()
		{
			return base.GetHashCode();
		}

        public static bool operator ==(QualityConf lhs, QualityConf rhs)
		{
			return lhs.Equals(rhs);
		}

		public static bool operator !=(QualityConf lhs, QualityConf rhs)
		{
			return !lhs.Equals(rhs);
		}
	}

    /// <summary>
    /// QualityConf表结构
    ///
	/// 品质背景表
	/// </summary>
	[Serializable]
	[CreateAssetMenu(menuName="ExcelObject/QualityConf")]
	public class QualityConfs : ScriptableObject
	{	
		public List<QualityConf> Values = new List<QualityConf>(); 
	}
}

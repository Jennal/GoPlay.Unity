// Code generated by Excel2ScriptableObject. DO NOT EDIT.
// source file: Assets/./Excels/全局设置表.xlsx
// source sheet: Setting@ZH_CN

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using UnityEngine;
using GoPlay;

namespace GoPlay.Data.Config
{
    /// <summary>
	/// SettingConf表单行结构
    ///
	/// 全局设置表
	/// </summary>
	[Serializable]
	public partial struct SettingConf
	{
		
		/// <summary>
		/// ID
		/// </summary>
		public int Id;

		/// <summary>
		/// 属性值
		/// </summary>
		public string Value;

		/// <summary>
		/// 资源
		/// </summary>
		public AssetRefer Res;

		
		public override string ToString()
		{
			var sb = new StringBuilder();
			sb.Append("SettingConf : { ");
			
			sb.AppendFormat("Id: {0}, ", Id);
			sb.AppendFormat("Value: {0}, ", Value);
			sb.AppendFormat("Res: {0}, ", Res);
			sb.Append(" }");
			return sb.ToString();
		}
		
		public override bool Equals(object obj)
		{
			if (obj is SettingConf == false) return false;
			
			var o = (SettingConf)obj;
			
			if (Id != o.Id) return false;
			if (Value != o.Value) return false;
			if (Res != o.Res) return false;
			
			return true;
		}

        public override int GetHashCode()
		{
			return base.GetHashCode();
		}

        public static bool operator ==(SettingConf lhs, SettingConf rhs)
		{
			return lhs.Equals(rhs);
		}

		public static bool operator !=(SettingConf lhs, SettingConf rhs)
		{
			return !lhs.Equals(rhs);
		}
	}

    /// <summary>
    /// SettingConf表结构
    ///
	/// 全局设置表
	/// </summary>
	[Serializable]
	[CreateAssetMenu(menuName="ExcelObject/SettingConf")]
	public class SettingConfs : ScriptableObject
	{	
		public List<SettingConf> Values = new List<SettingConf>(); 
	}
}

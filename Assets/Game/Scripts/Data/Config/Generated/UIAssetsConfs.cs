// Code generated by Excel2ScriptableObject. DO NOT EDIT.
// source file: Assets/./Excels/UI资源表.xlsx
// source sheet: UIAssets

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using UnityEngine;

namespace GoPlay.Data.Config
{
    /// <summary>
	/// UIAssetsConf表单行结构
    ///
	/// ui和assetbundle映射表，该表格通过 菜单 /Excel/Export UIAssets 导出自动生成，请勿手工修改
	/// </summary>
	[Serializable]
	public partial struct UIAssetsConf
	{
		
		/// <summary>
		/// Guid
		/// </summary>
		public string Guid;

		/// <summary>
		/// Assetbundle
		/// </summary>
		public string Assetbundle;

		/// <summary>
		/// Asset
		/// </summary>
		public string Asset;

		/// <summary>
		/// 类名
		/// </summary>
		public string ClassName;

		
		public override string ToString()
		{
			var sb = new StringBuilder();
			sb.Append("UIAssetsConf : { ");
			
			sb.AppendFormat("Guid: {0}, ", Guid);
			sb.AppendFormat("Assetbundle: {0}, ", Assetbundle);
			sb.AppendFormat("Asset: {0}, ", Asset);
			sb.AppendFormat("ClassName: {0}, ", ClassName);
			sb.Append(" }");
			return sb.ToString();
		}
		
		public override bool Equals(object obj)
		{
			if (obj is UIAssetsConf == false) return false;
			
			var o = (UIAssetsConf)obj;
			
			if (Guid != o.Guid) return false;
			if (Assetbundle != o.Assetbundle) return false;
			if (Asset != o.Asset) return false;
			if (ClassName != o.ClassName) return false;
			
			return true;
		}

        public override int GetHashCode()
		{
			return base.GetHashCode();
		}

        public static bool operator ==(UIAssetsConf lhs, UIAssetsConf rhs)
		{
			return lhs.Equals(rhs);
		}

		public static bool operator !=(UIAssetsConf lhs, UIAssetsConf rhs)
		{
			return !lhs.Equals(rhs);
		}
	}

    /// <summary>
    /// UIAssetsConf表结构
    ///
	/// ui和assetbundle映射表，该表格通过 菜单 /Excel/Export UIAssets 导出自动生成，请勿手工修改
	/// </summary>
	[Serializable]
	[CreateAssetMenu(menuName="ExcelObject/UIAssetsConf")]
	public class UIAssetsConfs : ScriptableObject
	{	
		public List<UIAssetsConf> Values = new List<UIAssetsConf>(); 
	}
}
